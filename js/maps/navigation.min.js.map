{"version":3,"sources":["navigation.js"],"names":["container","button","menu","links","i","len","document","getElementById","querySelector","getElementsByTagName","setAttribute","className","indexOf","onclick","replace","IntersectionObserver","entries","length","isIntersecting","body","classList","add","remove","threshold","observe","addEventListener","toggleFocus","touchStartFn","parentLink","querySelectorAll","window","e","menuItem","this","parentNode","contains","preventDefault","children","style","display","self","tagName","toLowerCase","parentElement"],"mappings":"CAMA,WACC,IAAIA,EAAWC,EAAQC,EAAMC,EAAOC,EAAGC,EAGvC,IADAL,EAAYM,SAASC,eAAgB,0BAMhC,KADLN,EAASK,SAASE,cAAe,iBAQjC,QAAK,KAHLN,EAAOF,EAAUS,qBAAsB,MAAO,IAG9C,CAqDA,IAhDAP,EAAKQ,aAAc,gBAAiB,UAC9B,IAAMR,EAAKS,UAAUC,QAAS,cACnCV,EAAKS,WAAa,aAGnBV,EAAOY,QAAU,YACV,IAAMb,EAAUW,UAAUC,QAAS,YACxCZ,EAAUW,UAAYX,EAAUW,UAAUG,QAAS,WAAY,IAC/Db,EAAOS,aAAc,gBAAiB,SACtCR,EAAKQ,aAAc,gBAAiB,WAEpCV,EAAUW,WAAa,WACvBV,EAAOS,aAAc,gBAAiB,QACtCR,EAAKQ,aAAc,gBAAiB,UAiB7B,IAAIK,sBAAsB,SAAAC,GAC/BA,EAAQC,OAAQ,IACfD,EAAQ,GAAGE,eACbZ,SAASa,KAAKC,UAAUC,IAAI,YAE5Bf,SAASa,KAAKC,UAAUE,OAAO,eAKhC,CAACC,UAAU,OAAaC,QAAQlB,SAASC,eAAe,iCAQpDH,EAAI,EAAGC,GAHbF,EAAWD,EAAKO,qBAAsB,MAGbQ,OAAQb,EAAIC,EAAKD,IACzCD,EAAMC,GAAGqB,iBAAkB,QAASC,GAAa,GACjDvB,EAAMC,GAAGqB,iBAAkB,OAAQC,GAAa,IA8B/C,SAAU1B,GACX,IAAI2B,EAAcvB,EACjBwB,EAAa5B,EAAU6B,iBAAkB,4DAE1C,GAAK,iBAAkBC,OAkBtB,IAjBAH,EAAe,SAAUI,GACxB,IAAgC3B,EAA5B4B,EAAWC,KAAKC,WAEpB,GAAOF,EAASZ,UAAUe,SAAU,SAUnCH,EAASZ,UAAUE,OAAQ,aAVoB,CAE/C,IADAS,EAAEK,iBACIhC,EAAI,EAAGA,EAAI4B,EAASE,WAAWG,SAASpB,SAAUb,EAClD4B,IAAaA,EAASE,WAAWG,SAASjC,IAG/C4B,EAASE,WAAWG,SAASjC,GAAGgB,UAAUE,OAAQ,SAEnDU,EAASZ,UAAUC,IAAK,WAMpBjB,EAAI,EAAGA,EAAIwB,EAAWX,SAAUb,EACrCwB,EAAWxB,GAAGqB,iBAAkB,aAAcE,GAAc,GAvB7D,CA0BC3B,QA9GFC,EAAOqC,MAAMC,QAAU,OA4DxB,SAASb,IAIR,IAHA,IAAIc,EAAOP,MAGF,IAAMO,EAAK7B,UAAUC,QAAS,aAGjC,OAAS4B,EAAKC,QAAQC,iBACpB,IAAMF,EAAK7B,UAAUC,QAAS,SACnC4B,EAAK7B,UAAY6B,EAAK7B,UAAUG,QAAS,SAAU,IAEnD0B,EAAK7B,WAAa,UAIpB6B,EAAOA,EAAKG,eA5Ff","file":"../navigation.min.js","sourcesContent":["/**\r\n * File navigation.js.\r\n *\r\n * Handles toggling the navigation menu for small screens and enables TAB key\r\n * navigation support for dropdown menus.\r\n */\r\n( function() {\r\n\tvar container, button, menu, links, i, len;\r\n\r\n\tcontainer = document.getElementById( 'site-navigation' );\r\n\tif ( ! container ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tbutton = document.querySelector( '.menu-toggle' );\r\n\tif ( 'undefined' === typeof button ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tmenu = container.getElementsByTagName( 'ul' )[0];\r\n\r\n\t// Hide menu toggle button if menu is empty and return early.\r\n\tif ( 'undefined' === typeof menu ) {\r\n\t\tbutton.style.display = 'none';\r\n\t\treturn;\r\n\t}\r\n\r\n\tmenu.setAttribute( 'aria-expanded', 'false' );\r\n\tif ( -1 === menu.className.indexOf( 'nav-menu' ) ) {\r\n\t\tmenu.className += ' nav-menu';\r\n\t}\r\n\r\n\tbutton.onclick = function() {\r\n\t\tif ( -1 !== container.className.indexOf( 'toggled' ) ) {\r\n\t\t\tcontainer.className = container.className.replace( ' toggled', '' );\r\n\t\t\tbutton.setAttribute( 'aria-expanded', 'false' );\r\n\t\t\tmenu.setAttribute( 'aria-expanded', 'false' );\r\n\t\t} else {\r\n\t\t\tcontainer.className += ' toggled';\r\n\t\t\tbutton.setAttribute( 'aria-expanded', 'true' );\r\n\t\t\tmenu.setAttribute( 'aria-expanded', 'true' );\r\n\t\t}\r\n\t};\r\n\r\n\t\r\n\t/**\r\n\t//  *  Trigger search\r\n\t//  */\r\n\t// document.querySelectorAll('.search-trigger').forEach( el => el.addEventListener('click',triggerSearch));\r\n\t// function triggerSearch(e){\r\n\t// \te.preventDefault();\r\n\t// \talert();\r\n\t// }\r\n\t/**\r\n\t * Ajoute un observer sur un élément sur la page placé juste en desous du fold en absolute \r\n\t * quand l'élément tombe dans le viewpost, le callback est exécuté\r\n\t */\r\n\tvar io = new IntersectionObserver( entries => {3\r\n\t\tif(entries.length >0){\r\n\t\t\tif(entries[0].isIntersecting){\r\n\t\t\t\tdocument.body.classList.add('scrolled');\r\n\t\t\t}else {\r\n\t\t\t\tdocument.body.classList.remove('scrolled');\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},{threshold:0.0001}); io.observe(document.getElementById('header-intersection-observer'));\r\n\t  \r\n\r\n\r\n\t// Get all the link elements within the menu.\r\n\tlinks    = menu.getElementsByTagName( 'a' );\r\n\r\n\t// Each time a menu link is focused or blurred, toggle focus.\r\n\tfor ( i = 0, len = links.length; i < len; i++ ) {\r\n\t\tlinks[i].addEventListener( 'focus', toggleFocus, true );\r\n\t\tlinks[i].addEventListener( 'blur', toggleFocus, true );\r\n\t}\r\n\r\n\t/**\r\n\t * Sets or removes .focus class on an element.\r\n\t */\r\n\tfunction toggleFocus() {\r\n\t\tvar self = this;\r\n\r\n\t\t// Move up through the ancestors of the current link until we hit .nav-menu.\r\n\t\twhile ( -1 === self.className.indexOf( 'nav-menu' ) ) {\r\n\r\n\t\t\t// On li elements toggle the class .focus.\r\n\t\t\tif ( 'li' === self.tagName.toLowerCase() ) {\r\n\t\t\t\tif ( -1 !== self.className.indexOf( 'focus' ) ) {\r\n\t\t\t\t\tself.className = self.className.replace( ' focus', '' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.className += ' focus';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tself = self.parentElement;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggles `focus` class to allow submenu access on tablets.\r\n\t */\r\n\t( function( container ) {\r\n\t\tvar touchStartFn, i,\r\n\t\t\tparentLink = container.querySelectorAll( '.menu-item-has-children > a, .page_item_has_children > a' );\r\n\r\n\t\tif ( 'ontouchstart' in window ) {\r\n\t\t\ttouchStartFn = function( e ) {\r\n\t\t\t\tvar menuItem = this.parentNode, i;\r\n\r\n\t\t\t\tif ( ! menuItem.classList.contains( 'focus' ) ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tfor ( i = 0; i < menuItem.parentNode.children.length; ++i ) {\r\n\t\t\t\t\t\tif ( menuItem === menuItem.parentNode.children[i] ) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmenuItem.parentNode.children[i].classList.remove( 'focus' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmenuItem.classList.add( 'focus' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmenuItem.classList.remove( 'focus' );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( i = 0; i < parentLink.length; ++i ) {\r\n\t\t\t\tparentLink[i].addEventListener( 'touchstart', touchStartFn, false );\r\n\t\t\t}\r\n\t\t}\r\n\t}( container ) );\r\n\r\n\r\n\t\r\n} )();\r\n"]}