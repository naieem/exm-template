{"version":3,"sources":["gutenberg_blocks/sales-agent-finder/sales-agent-finder-render.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","return","isArray","_typeof","cdm_core","fn","docReady","build_salesagentfinder","document","querySelector","google","maps","findmarkerbyID","id","MAP","markers","forEach","marker","agent","togglemarker","GEOCODER","Geocoder","REQUEST","CODE_POSTAL","DISTANCE","CIRCLE","LAST_QUERY","initMap","rad","x","Math","PI","TRIER","bounds","LatLngBounds","rebound","p1","p2","dLat","dLong","position","center","lat","lng","sin","cos","atan2","sqrt","setVisible","extend","getPosition","radius","getRadius","map","setZoom","ceil","log","react","render","React","createElement","List","find","Filters","onfilter","val","console","postal","range","setRadius","geocode","address","results","status","GeocoderStatus","OK","setCenter","geometry","location","setMap","Circle","strokeColor","strokeWeight","strokeOpacity","fillColor","fillOpacity","is_circle","props","firstUpdate","useRef","useLayoutEffect","current","Conditional","components","Collapsible","Fragment","fragment","added","visible","title","HTMLEntities","Agent","condition","class","salesagentfinder_data","lang","noresult","_cdm_core$react$useSt2","useState","setRange","_cdm_core$react$useSt4","setPostal","modifyRange","onInput","target","type","placeholder","onClick","reset","min","max","onChange","url","className","href","encodeURI","open","Contact","phone","Telephone","split","filter","includes","join","cell_phone","Cell","fax","Fax","email","Email","website","Website","rel","Address","Map","getElementById","zoom","mapTypeId","disableDefaultUI","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","mapTypes","set","StyledMapType","GOOGLEMAP_CONFIG","style","agents","LatLng","Marker","infowindow","InfoWindow","content","fitBounds","panTo","close","getContent","addListener"],"mappings":"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","file":"../../../gutenberg_blocks/sales-agent-finder/sales-agent-finder-render.min.js","sourcesContent":["\ncdm_core.fn.docReady(() => build_salesagentfinder())\n\nconst build_salesagentfinder = () => {\n\n    if (document.querySelector('.wp-block-exm-sales-agent-finder .agents')) {\n        if (typeof google === 'object' && typeof google.maps === 'object') {\n            let GEOCODER = new google.maps.Geocoder();\n            let REQUEST = null;\n            let CODE_POSTAL = \"\";\n            let DISTANCE = 0;\n            let CIRCLE = null;\n            let LAST_QUERY = \"\";\n            let MAP = initMap();\n\n            const rad = (x) => x * Math.PI / 180;\n\n            const getDistance = function (p1, p2) {\n\n                var R = 6378137; // Earth’s mean radius in meter\n                var dLat = rad(p2.lat() - p1.lat());\n                var dLong = rad(p2.lng() - p1.lng());\n                var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n                    Math.cos(rad(p1.lat())) * Math.cos(rad(p2.lat())) *\n                    Math.sin(dLong / 2) * Math.sin(dLong / 2);\n                var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n                var d = R * c;\n                return d; // returns the distance in meter\n            };\n\n            const TRIER = () => {\n                let bounds = new google.maps.LatLngBounds();\n                let rebound = false;\n                let pointsCount = 0;\n\n                MAP.markers.forEach(marker => {\n                    if (marker) {\n                        if (CODE_POSTAL !== '') {\n                            if (getDistance(marker.position, CIRCLE.center) <= DISTANCE * 1000) {\n                                marker.setVisible(true);\n                                rebound = true;\n                                bounds.extend(marker.getPosition());\n                                pointsCount++\n\n                            } else {\n                                marker.setVisible(false);\n                            }\n                        } else {\n                            marker.setVisible(true);\n                            rebound = true;\n                            bounds.extend(marker.getPosition());\n                            pointsCount++\n                        }\n                    }\n                })\n                // markerClusterer.repaint()\n                if (rebound) {\n                    if (CIRCLE !== null) {\n                        var radius = CIRCLE.getRadius() / 200;\n                        map.setZoom(Math.ceil(16 - Math.log(radius) / Math.log(2)));\n                    }\n                }\n                cdm_core.react.render(<List markers={MAP.markers} find={findmarkerbyID} />, document.querySelector('.wp-block-exm-sales-agent-finder .agents'));\n            };\n\n            const FILTER_ALL = (val) => {\n                console.log('filter is on');\n                CODE_POSTAL = val.postal\n                DISTANCE = val.range\n\n                if (LAST_QUERY == CODE_POSTAL) {\n\n                    if (CIRCLE !== null) {\n                        CIRCLE.setRadius(DISTANCE * 1000);\n                    }\n                    TRIER()\n\n                } else if (!CODE_POSTAL) {\n                    CIRCLE.setMap(null)\n                    TRIER()\n                } else {\n                    if (!REQUEST) {\n\n                        REQUEST == true;\n                        GEOCODER.geocode({ 'address': CODE_POSTAL }, function (results, status) {\n                            if (status == google.maps.GeocoderStatus.OK) {\n                                //Got result, center the map and put it out there\n                                MAP.setCenter(results[0].geometry.location);\n                                if (CIRCLE !== null) { CIRCLE.setMap(null) }\n                                CIRCLE = new google.maps.Circle({\n\n                                    center: results[0].geometry.location,\n                                    map: MAP,\n                                    strokeColor: '#c79153',\n                                    strokeWeight: 1,\n                                    strokeOpacity: 0.5,\n                                    fillColor: '#c79153',\n                                    fillOpacity: 0.4,\n                                    radius: DISTANCE * 1000,\n                                    is_circle: true\n                                });\n                                TRIER();\n                                LAST_QUERY = CODE_POSTAL;\n                                REQUEST = false;\n                            } else {\n                                // console.log(\"Geocode failed \" + status);\n                                LAST_QUERY = CODE_POSTAL;\n                                REQUEST = false;\n                            }\n                        });\n                    }\n                }\n\n            }\n            cdm_core.react.render(<Filters onfilter={FILTER_ALL} />, document.querySelector('.wp-block-exm-sales-agent-finder .filters'));\n            TRIER()\n            function findmarkerbyID(id) {\n                MAP.markers.forEach(marker => {\n                    if (marker.agent.id == id) {\n                        MAP.togglemarker(marker)\n                    }\n                })\n            }\n\n\n\n\n\n        }//initmap\n\n\n\n    }\n}\n\n\n\nconst List = (props) => {\n    const firstUpdate = React.useRef(true);\n    React.useLayoutEffect(() => {\n        if (firstUpdate.current) {\n            firstUpdate.current = false;\n            return;\n        }\n    });\n    const { Conditional } = cdm_core.components;\n    const { Collapsible } = cdm_core.components;\n    const Fragment = cdm_core.react.fragment\n    let added = 0;\n\n    return <Fragment>\n        {props.markers.map(x => {\n            if (x?.visible) {\n                added++;\n                return <Collapsible title={cdm_core.fn.HTMLEntities(x.agent.title)} >\n                    <Agent find={props.find} agent={x.agent} />\n                </Collapsible>\n            }\n        })}\n        <Conditional condition={added == 0} >\n            <p class=\"noresult\">{salesagentfinder_data.lang.noresult}</p>\n        </Conditional>\n    </Fragment>;\n};\n\nconst Filters = (props) => {\n    const { Conditional } = cdm_core.components;\n    const [range, setRange] = cdm_core.react.useState(100);\n    const [postal, setPostal] = cdm_core.react.useState('');\n    const max = 500;\n    const min = 1;\n    const step = 5;\n    const modifyRange = (val) => {\n        if ((range + val) <= max && (range + val) >= min) {\n            setRange(range + val);\n            props.onfilter({ postal: postal, range: range + val })\n        }\n    }\n\n    const resetAll = (e) => {\n        setPostal('');\n        setRange(100);\n        props.onfilter({ postal: '', range: 100 })\n    };\n\n    const onChangeHandler = (e) => {\n        setPostal(e.target.value)\n        props.onfilter({ postal: e.target.value, range: range })\n    };\n    const onRange = (e) => {\n        setRange(+(e.target.value))\n        props.onfilter({ postal: postal, range: +(e.target.value) })\n\n    }\n\n    return <div>\n        <span class=\"form-wrapper\">\n            <input value={postal} onInput={onChangeHandler} type=\"text\" placeholder={salesagentfinder_data.lang.postal} />\n            <button ><i class=\"fa fa-search\"></i></button>\n        </span>\n        <span class=\"ranger-wrapper\">\n            <span class=\"title\" >Max distance: {range}Km <Conditional condition={(range !== 100 || postal !== '')} > <span onClick={resetAll} class=\"reset\">{salesagentfinder_data.lang.reset}</span> </Conditional> </span>\n            <span class=\"wrap-add\">\n                <span onClick={() => modifyRange(-step)} class=\"moins\">-</span>\n                <input type=\"range\" min={min} max={max} value={range} onChange={onRange} class=\"slider\" id=\"myRange\" />\n                <span onClick={() => modifyRange(step)} class=\"plus\">+</span>\n            </span>\n        </span>\n    </div>\n};\n\n\n\n\nconst Agent = (props) => {\n    const { Conditional } = cdm_core.components;\n    const addhttp = (url) => {\n        if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n            url = \"https://\" + url;\n        }\n        return url;\n    }\n    return <Conditional condition={(props.agent.address.address !== null && props.agent.address.address !== false)} >\n        <div>\n            <p className=\"address-link\">\n                <span onClick={() => props.find(props.agent.id)}>{cdm_core.fn.HTMLEntities(props.agent.title)}</span>\n                <a target=\"_blank\" href={'https://www.google.com/maps/search/?api=1&query=' + encodeURI(props.agent.address.address)}>\n                    {salesagentfinder_data.lang.open}\n                    <i className=\"far fa-external-link\"></i>\n                </a>\n            </p>\n            <p className=\"contacts\">\n                <Conditional condition={(props.agent.name !== '')} >\n                    <span class=\"title\">{salesagentfinder_data.lang.Contact}: </span><span>{cdm_core.fn.HTMLEntities(props.agent.name)}</span><br />\n                </Conditional>\n                <Conditional condition={(props.agent.phone !== '')} >\n                    <span class=\"title\">{salesagentfinder_data.lang.Telephone}: </span><a href={'tel:' + props.agent.phone.split('').filter(x => !['-', ' ', '(', ')'].includes(x)).join('')}>{props.agent.phone}</a><br />\n                </Conditional>\n                <Conditional condition={(props.agent.cell_phone !== '')} >\n                    <span class=\"title\">{salesagentfinder_data.lang.Cell} phone: </span><a href={'tel:' + props.agent.phone.split('').filter(x => !['-', ' ', '(', ')'].includes(x)).join('')}>{props.agent.cell_phone}</a><br />\n                </Conditional>\n                <Conditional condition={(props.agent.fax !== '')} >\n                    <span class=\"title\">{salesagentfinder_data.lang.Fax}: </span><a href={'tel:' + props.agent.phone.split('').filter(x => !['-', ' ', '(', ')'].includes(x)).join('')}>{props.agent.fax}</a><br />\n                </Conditional>\n                <Conditional condition={(props.agent.email !== '')} >\n                    <span class=\"title\">{salesagentfinder_data.lang.Email}: </span><a href={'mailto:' + props.agent.email} >{props.agent.email}</a><br />\n                </Conditional>\n                <Conditional condition={(props.agent.website !== '')} >\n                    <span class=\"title\">{salesagentfinder_data.lang.Website}: </span><a rel=\"noopener\" target=\"_blank\" href={addhttp(props.agent.website)} >{props.agent.website}</a><br></br>\n                </Conditional>\n                <Conditional condition={(props.agent.address.address !== '')} >\n                    <span class=\"title\">{salesagentfinder_data.lang.Address}: </span><a target=\"_blank\" href={'https://www.google.com/maps/search/?api=1&query=' + encodeURI(props.agent.address.address)} >{props.agent.address.address}</a><br></br>\n                </Conditional>\n\n\n            </p>\n        </div>\n    </Conditional>\n}\n\n\nfunction initMap() {\n    map = new google.maps.Map(document.getElementById(\"contactmap\"), {\n        center: { lat: -34.397, lng: 150.644 },\n        zoom: 8,\n        mapTypeId: 'custom_style',\n        disableDefaultUI: true,\n        mapTypeControlOptions: { mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'custom_style'] },\n    });\n\n    map.mapTypes.set(\n        'custom_style',\n        new google.maps.StyledMapType(GOOGLEMAP_CONFIG.style, { name: 'Custom Style' })\n    );\n\n    const bounds = new google.maps.LatLngBounds();\n    map.markers = salesagentfinder_data.agents.map(agent => {\n        if (agent.address !== false && agent.address !== null) {\n            bounds.extend(new google.maps.LatLng(agent.address.lat, agent.address.lng));\n\n            return new google.maps.Marker({\n                position: new google.maps.LatLng(agent.address.lat, agent.address.lng),\n                map,\n                agent: agent,\n                infowindow: new google.maps.InfoWindow({ content: document.createElement('div') }),\n                title: agent.address.address\n            });\n        }\n    });// A marker\n    map.fitBounds(bounds, 50);\n\n\n    map.togglemarker = (marker) => {\n        map.panTo(marker.getPosition())\n        map.setZoom(12)\n        map.markers.forEach(marker => { marker.infowindow.close() })\n        marker.infowindow.open(map, marker);\n        cdm_core.react.render(<Agent agent={marker.agent} />, marker.infowindow.getContent())\n    }\n\n    try {\n        map.markers.forEach(marker => {\n            marker.addListener('click', () => {\n                map.togglemarker(marker)\n            })\n        })\n    } catch (e) {\n        //e; // => ReferenceError\n        console.log('missingVar marker.addListener...');\n    }\n\n    return map;\n}\n\n\n\n\n"]}