{"version":3,"sources":["gutenberg_blocks/sales-agent-finder/sales-agent-finder-render.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","Array","isArray","_typeof","obj","constructor","cdm_core","fn","docReady","build_salesagentfinder","document","querySelector","google","maps","findmarkerbyID","id","MAP","markers","forEach","marker","agent","togglemarker","GEOCODER","Geocoder","REQUEST","CODE_POSTAL","DISTANCE","CIRCLE","LAST_QUERY","rad","x","Math","PI","TRIER","bounds","LatLngBounds","rebound","p1","p2","dLat","dLong","a","position","center","lat","lng","sin","cos","atan2","sqrt","setVisible","extend","getPosition","pointsCount","radius","getRadius","map","setZoom","ceil","log","react","render","React","createElement","List","find","Filters","onfilter","val","postal","range","setRadius","geocode","address","results","status","GeocoderStatus","OK","setCenter","geometry","location","setMap","Circle","strokeColor","strokeWeight","strokeOpacity","fillColor","fillOpacity","is_circle","initMap","props","firstUpdate","useRef","useLayoutEffect","current","Conditional","components","Collapsible","Fragment","fragment","added","visible","title","HTMLEntities","Agent","condition","class","salesagentfinder_data","lang","noresult","_cdm_core$react$useSt2","useState","setRange","_cdm_core$react$useSt4","setPostal","modifyRange","onInput","e","target","type","placeholder","onClick","reset","min","max","onChange","url","className","href","encodeURI","open","name","Contact","phone","Telephone","split","filter","includes","join","cell_phone","Cell","fax","Fax","email","Email","website","Website","rel","test","Address","Map","getElementById","zoom","mapTypeId","disableDefaultUI","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","mapTypes","set","StyledMapType","GOOGLEMAP_CONFIG","style","agents","LatLng","Marker","infowindow","InfoWindow","content","fitBounds","panTo","close","getContent","addListener"],"mappings":"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","file":"../../../gutenberg_blocks/sales-agent-finder/sales-agent-finder-render.min.js","sourcesContent":["\r\ncdm_core.fn.docReady(()=>build_salesagentfinder())\r\n\r\nconst build_salesagentfinder = () => {\r\n    \r\n    if(document.querySelector('.wp-block-exm-sales-agent-finder .agents')){\r\n        if (typeof google === 'object' && typeof google.maps === 'object') {\r\n            let GEOCODER = new google.maps.Geocoder();\r\n            let REQUEST = null;\r\n            let CODE_POSTAL = \"\";\r\n            let DISTANCE = 0;\r\n            let CIRCLE = null;\r\n            let LAST_QUERY = \"\";\r\n\r\n            const rad = (x) =>  x * Math.PI / 180;\r\n\r\n            const getDistance = function(p1, p2) {\r\n        \r\n                var R = 6378137; // Earth’s mean radius in meter\r\n                var dLat = rad(p2.lat() - p1.lat());\r\n                var dLong = rad(p2.lng() - p1.lng());\r\n                var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n                    Math.cos(rad(p1.lat())) * Math.cos(rad(p2.lat())) *\r\n                    Math.sin(dLong / 2) * Math.sin(dLong / 2);\r\n                var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n                var d = R * c;\r\n                return d; // returns the distance in meter\r\n            };\r\n\r\n            const TRIER = ()=>{\r\n                let bounds = new google.maps.LatLngBounds();\r\n                let rebound = false;\r\n                let pointsCount = 0;\r\n                \r\n                MAP.markers.forEach(marker => {\r\n                    if(CODE_POSTAL !== ''){\r\n                        if( getDistance(marker.position,CIRCLE.center) <= DISTANCE*1000 ){\r\n                            marker.setVisible(true);\r\n                            rebound = true;\r\n                            bounds.extend(marker.getPosition());\r\n                            pointsCount++\r\n                            \r\n                        }else{\r\n                            marker.setVisible(false);\r\n                        }\r\n                    }else{\r\n                        marker.setVisible(true);\r\n                        rebound = true;\r\n                        bounds.extend(marker.getPosition());\r\n                        pointsCount++\r\n                    }\r\n                })\r\n                // markerClusterer.repaint()\r\n                if(rebound){\r\n                    if(CIRCLE !== null){\r\n                        var radius = CIRCLE.getRadius()/200;\r\n                        map.setZoom(Math.ceil(16 - Math.log(radius) / Math.log(2)));\r\n                    }\r\n                }\r\n                cdm_core.react.render(<List markers={MAP.markers} find={findmarkerbyID} />,document.querySelector('.wp-block-exm-sales-agent-finder .agents'));\r\n            };\r\n\r\n            const FILTER_ALL = (val)=>{\r\n                \r\n                CODE_POSTAL = val.postal\r\n                DISTANCE = val.range\r\n               \r\n                if(LAST_QUERY == CODE_POSTAL){\r\n                    \r\n                    if(CIRCLE !== null){\r\n                        CIRCLE.setRadius(DISTANCE * 1000);\r\n                    }\r\n                    TRIER()\r\n                    \r\n                }else if(!CODE_POSTAL){\r\n                    CIRCLE.setMap(null)\r\n                    TRIER()\r\n                }else{\r\n                    if(!REQUEST){\r\n                        \r\n                        REQUEST == true;\r\n                        GEOCODER.geocode( { 'address': CODE_POSTAL}, function(results, status) {\r\n                            if (status == google.maps.GeocoderStatus.OK) {\r\n                            //Got result, center the map and put it out there\r\n                            MAP.setCenter(results[0].geometry.location);\r\n                            if(CIRCLE !== null){ CIRCLE.setMap(null) }\r\n                            CIRCLE = new google.maps.Circle({\r\n                                \r\n                                    center: results[0].geometry.location,\r\n                                    map: MAP,\r\n                                    strokeColor: '#c79153',\r\n                                    strokeWeight: 1,\r\n                                    strokeOpacity: 0.5,\r\n                                    fillColor: '#c79153',\r\n                                    fillOpacity: 0.4,\r\n                                    radius: DISTANCE * 1000,\r\n                                    is_circle : true\r\n                            });\r\n                            TRIER();\r\n                            LAST_QUERY = CODE_POSTAL;\r\n                            REQUEST = false;\r\n                            } else {\r\n                            // console.log(\"Geocode failed \" + status);\r\n                            LAST_QUERY = CODE_POSTAL;\r\n                                REQUEST = false;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                   \r\n            }\r\n            cdm_core.react.render(<Filters onfilter={FILTER_ALL} />,document.querySelector('.wp-block-exm-sales-agent-finder .filters'));\r\n            let MAP = initMap();\r\n            TRIER()\r\n            function findmarkerbyID(id){\r\n                MAP.markers.forEach(marker => {\r\n                    if(marker.agent.id == id){\r\n                        MAP.togglemarker(marker)\r\n                    }\r\n                })\r\n            }\r\n\r\n           \r\n           \r\n            \r\n            \r\n        }//initmap\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst List = (props) => {\r\n    const firstUpdate = React.useRef(true);\r\n    React.useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n          firstUpdate.current = false;\r\n          return ;\r\n        }\r\n    });\r\n    const {Conditional} = cdm_core.components;\r\n    const {Collapsible} = cdm_core.components;\r\n    const Fragment = cdm_core.react.fragment\r\n    let added = 0;\r\n\r\n    return  <Fragment>\r\n                {props.markers.map(x=>{\r\n                    if(x.visible  ){\r\n                        added++;\r\n                        return  <Collapsible title={cdm_core.fn.HTMLEntities(x.agent.title)} >\r\n                                    <Agent find={props.find} agent={x.agent} />\r\n                                </Collapsible>\r\n                    }\r\n                })}\r\n                <Conditional condition={added == 0} >\r\n                    <p class=\"noresult\">{salesagentfinder_data.lang.noresult}</p>\r\n                </Conditional>\r\n            </Fragment>;\r\n};\r\n\r\nconst Filters = (props) => {\r\n    const {Conditional} = cdm_core.components;\r\n    const [range,setRange] = cdm_core.react.useState(100);\r\n    const [postal,setPostal] = cdm_core.react.useState('');\r\n    const max = 500;\r\n    const min = 1;    \r\n    const step = 5;    \r\n    const modifyRange = (val) => {\r\n        if((range + val) <= max && (range + val) >= min ){\r\n            setRange(range + val);\r\n            props.onfilter({postal:postal,range:range + val})\r\n        }\r\n    }\r\n\r\n    const resetAll = (e)=>{\r\n        setPostal('');\r\n        setRange(100);\r\n        props.onfilter({postal:'',range:100})\r\n    };\r\n\r\n    const onChangeHandler = (e)=>{\r\n        setPostal(e.target.value)\r\n        props.onfilter({postal:e.target.value,range:range})\r\n    };\r\n    const onRange = (e) => {\r\n        setRange(+(e.target.value))\r\n        props.onfilter({postal:postal,range:+(e.target.value)})\r\n\r\n    }\r\n\r\n    return <div>\r\n                <span class=\"form-wrapper\">\r\n                    <input value={postal} onInput={onChangeHandler} type=\"text\" placeholder={salesagentfinder_data.lang.postal} />\r\n                    <button ><i class=\"fa fa-search\"></i></button>\r\n                </span>\r\n                <span class=\"ranger-wrapper\">\r\n                    <span class=\"title\" >Max distance: {range}Km <Conditional condition={(range !== 100 || postal !== '')} > <span onClick={resetAll} class=\"reset\">{salesagentfinder_data.lang.reset}</span> </Conditional> </span>\r\n                    <span class=\"wrap-add\">\r\n                        <span onClick={()=>modifyRange(-step)}  class=\"moins\">-</span>\r\n                            <input type=\"range\" min={min} max={max} value={range} onChange={onRange} class=\"slider\" id=\"myRange\" />\r\n                        <span onClick={()=>modifyRange(step)}  class=\"plus\">+</span>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n};\r\n\r\n\r\n\r\n\r\nconst Agent = (props) => {\r\n    const {Conditional} = cdm_core.components;\r\n    const addhttp = (url) => {\r\n        if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\r\n            url = \"https://\" + url;\r\n        }\r\n        return url;\r\n    }\r\n    return  <Conditional condition={(props.agent.address.address !== null && props.agent.address.address !== false)} >\r\n                <div>\r\n                    <p className=\"address-link\">\r\n                        <span onClick={() => props.find(props.agent.id)}>{cdm_core.fn.HTMLEntities(props.agent.title)}</span>\r\n                        <a target=\"_blank\" href={'https://www.google.com/maps/search/?api=1&query=' + encodeURI(props.agent.address.address)}>\r\n                            {salesagentfinder_data.lang.open}\r\n                            <i className=\"far fa-external-link\"></i>\r\n                        </a>\r\n                    </p>\r\n                    <p className=\"contacts\">\r\n                        <Conditional condition={(props.agent.name !== '')} >\r\n                            <span class=\"title\">{salesagentfinder_data.lang.Contact}: </span><span>{cdm_core.fn.HTMLEntities(props.agent.name)}</span><br/>\r\n                        </Conditional>\r\n                        <Conditional condition={(props.agent.phone !== '')} >\r\n                            <span class=\"title\">{salesagentfinder_data.lang.Telephone}: </span><a href={'tel:'+props.agent.phone.split('').filter(x=>!['-',' ','(',')'].includes(x)).join('')}>{props.agent.phone}</a><br/>\r\n                        </Conditional>\r\n                        <Conditional condition={(props.agent.cell_phone !== '')} >\r\n                            <span class=\"title\">{salesagentfinder_data.lang.Cell} phone: </span><a href={'tel:'+props.agent.phone.split('').filter(x=>!['-',' ','(',')'].includes(x)).join('')}>{props.agent.cell_phone}</a><br/>\r\n                        </Conditional>\r\n                        <Conditional condition={(props.agent.fax !== '')} >\r\n                            <span class=\"title\">{salesagentfinder_data.lang.Fax}: </span><a href={'tel:'+props.agent.phone.split('').filter(x=>!['-',' ','(',')'].includes(x)).join('')}>{props.agent.fax}</a><br/>\r\n                        </Conditional>\r\n                        <Conditional condition={(props.agent.email !== '')} >\r\n                            <span class=\"title\">{salesagentfinder_data.lang.Email}: </span><a href={'mailto:'+props.agent.email} >{props.agent.email}</a><br/>\r\n                        </Conditional>\r\n                        <Conditional condition={(props.agent.website !== '')} >\r\n                            <span class=\"title\">{salesagentfinder_data.lang.Website}: </span><a  rel=\"noopener\" target=\"_blank\" href={addhttp(props.agent.website)} >{props.agent.website}</a><br></br>\r\n                        </Conditional>\r\n                        <Conditional condition={(props.agent.address.address !== '')} >\r\n                            <span class=\"title\">{salesagentfinder_data.lang.Address}: </span><a target=\"_blank\" href={'https://www.google.com/maps/search/?api=1&query=' + encodeURI(props.agent.address.address)} >{props.agent.address.address}</a><br></br>\r\n                        </Conditional> \r\n\r\n                        \r\n                    </p>\r\n                </div>\r\n            </Conditional>\r\n}\r\n\r\n\r\nfunction initMap(){\r\n    map = new google.maps.Map(document.getElementById(\"contactmap\"), {\r\n        center: { lat: -34.397, lng: 150.644 },\r\n        zoom: 8,\r\n        mapTypeId: 'custom_style',\r\n        disableDefaultUI: true,\r\n        mapTypeControlOptions: { mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'custom_style'] },\r\n    });      \r\n    \r\n    map.mapTypes.set(\r\n        'custom_style', \r\n        new google.maps.StyledMapType(GOOGLEMAP_CONFIG.style, {name: 'Custom Style'})\r\n    );\r\n\r\n    const bounds = new google.maps.LatLngBounds();\r\n    map.markers = salesagentfinder_data.agents.map(agent => {\r\n        if(agent.address !== false && agent.address !== null){\r\n            bounds.extend(new google.maps.LatLng(agent.address.lat, agent.address.lng));\r\n\r\n            return new google.maps.Marker({\r\n                position: new google.maps.LatLng(agent.address.lat, agent.address.lng),\r\n                map,\r\n                agent:agent,\r\n                infowindow: new google.maps.InfoWindow({content:document.createElement('div')}),\r\n                title: agent.address.address\r\n            });\r\n        }\r\n    });// A marker\r\n    map.fitBounds(bounds,50); \r\n\r\n\r\n    map.togglemarker = (marker) => {\r\n        map.panTo(marker.getPosition())\r\n        map.setZoom(12)\r\n        map.markers.forEach(marker => {marker.infowindow.close()})\r\n        marker.infowindow.open(map, marker);\r\n        cdm_core.react.render(<Agent agent={marker.agent} />,marker.infowindow.getContent())\r\n    }\r\n\r\n    map.markers.forEach(marker => {\r\n        marker.addListener('click',()=>{\r\n            map.togglemarker(marker)\r\n        })\r\n    })\r\n    return map;\r\n}\r\n\r\n\r\n\r\n\r\n"]}