{"version":3,"sources":["gutenberg_blocks/sales-agent-finder/sales-agent-finder-render-bk.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","return","isArray","_typeof","cdm_core","fn","docReady","build_salesagentfinder","document","querySelector","google","maps","findmarkerbyID","id","MAP","markers","forEach","marker","agent","togglemarker","GEOCODER","Geocoder","REQUEST","CODE_POSTAL","DISTANCE","CIRCLE","LAST_QUERY","rad","x","Math","PI","TRIER","bounds","LatLngBounds","rebound","p1","p2","dLat","dLong","position","center","lat","lng","sin","cos","atan2","sqrt","setVisible","extend","getPosition","radius","getRadius","map","setZoom","ceil","log","react","render","React","createElement","List","find","Filters","onfilter","val","postal","range","setRadius","geocode","address","results","status","GeocoderStatus","OK","setCenter","geometry","location","setMap","Circle","strokeColor","strokeWeight","strokeOpacity","fillColor","fillOpacity","is_circle","initMap","props","firstUpdate","useRef","useLayoutEffect","current","Conditional","components","Collapsible","Fragment","fragment","added","visible","title","HTMLEntities","Agent","condition","class","salesagentfinder_data","lang","noresult","_cdm_core$react$useSt2","useState","setRange","_cdm_core$react$useSt4","setPostal","modifyRange","onInput","target","type","placeholder","onClick","reset","min","max","onChange","url","className","href","encodeURI","open","Contact","phone","Telephone","split","filter","includes","join","cell_phone","Cell","fax","Fax","email","Email","website","Website","rel","Address","Map","getElementById","zoom","mapTypeId","disableDefaultUI","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","mapTypes","set","StyledMapType","GOOGLEMAP_CONFIG","style","agents","LatLng","Marker","infowindow","InfoWindow","content","fitBounds","panTo","close","getContent","addListener"],"mappings":"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","file":"../../../gutenberg_blocks/sales-agent-finder/sales-agent-finder-render-bk.min.js","sourcesContent":["\ncdm_core.fn.docReady(()=>build_salesagentfinder())\n\nconst build_salesagentfinder = () => {\n    \n    if(document.querySelector('.wp-block-exm-sales-agent-finder .agents')){\n        if (typeof google === 'object' && typeof google.maps === 'object') {\n            let GEOCODER = new google.maps.Geocoder();\n            let REQUEST = null;\n            let CODE_POSTAL = \"\";\n            let DISTANCE = 0;\n            let CIRCLE = null;\n            let LAST_QUERY = \"\";\n\n            const rad = (x) =>  x * Math.PI / 180;\n\n            const getDistance = function(p1, p2) {\n        \n                var R = 6378137; // Earth’s mean radius in meter\n                var dLat = rad(p2.lat() - p1.lat());\n                var dLong = rad(p2.lng() - p1.lng());\n                var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n                    Math.cos(rad(p1.lat())) * Math.cos(rad(p2.lat())) *\n                    Math.sin(dLong / 2) * Math.sin(dLong / 2);\n                var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n                var d = R * c;\n                return d; // returns the distance in meter\n            };\n\n            const TRIER = ()=>{\n                let bounds = new google.maps.LatLngBounds();\n                let rebound = false;\n                let pointsCount = 0;\n                \n                MAP.markers.forEach(marker => {\n                    if(CODE_POSTAL !== ''){\n                        if( getDistance(marker.position,CIRCLE.center) <= DISTANCE*1000 ){\n                            marker.setVisible(true);\n                            rebound = true;\n                            bounds.extend(marker.getPosition());\n                            pointsCount++\n                            \n                        }else{\n                            marker.setVisible(false);\n                        }\n                    }else{\n                        marker.setVisible(true);\n                        rebound = true;\n                        bounds.extend(marker.getPosition());\n                        pointsCount++\n                    }\n                })\n                // markerClusterer.repaint()\n                if(rebound){\n                    if(CIRCLE !== null){\n                        var radius = CIRCLE.getRadius()/200;\n                        map.setZoom(Math.ceil(16 - Math.log(radius) / Math.log(2)));\n                    }\n                }\n                cdm_core.react.render(<List markers={MAP.markers} find={findmarkerbyID} />,document.querySelector('.wp-block-exm-sales-agent-finder .agents'));\n            };\n\n            const FILTER_ALL = (val)=>{\n                \n                CODE_POSTAL = val.postal\n                DISTANCE = val.range\n               \n                if(LAST_QUERY == CODE_POSTAL){\n                    \n                    if(CIRCLE !== null){\n                        CIRCLE.setRadius(DISTANCE * 1000);\n                    }\n                    TRIER()\n                    \n                }else if(!CODE_POSTAL){\n                    CIRCLE.setMap(null)\n                    TRIER()\n                }else{\n                    if(!REQUEST){\n                        \n                        REQUEST == true;\n                        GEOCODER.geocode( { 'address': CODE_POSTAL}, function(results, status) {\n                            if (status == google.maps.GeocoderStatus.OK) {\n                            //Got result, center the map and put it out there\n                            MAP.setCenter(results[0].geometry.location);\n                            if(CIRCLE !== null){ CIRCLE.setMap(null) }\n                            CIRCLE = new google.maps.Circle({\n                                \n                                    center: results[0].geometry.location,\n                                    map: MAP,\n                                    strokeColor: '#c79153',\n                                    strokeWeight: 1,\n                                    strokeOpacity: 0.5,\n                                    fillColor: '#c79153',\n                                    fillOpacity: 0.4,\n                                    radius: DISTANCE * 1000,\n                                    is_circle : true\n                            });\n                            TRIER();\n                            LAST_QUERY = CODE_POSTAL;\n                            REQUEST = false;\n                            } else {\n                            // console.log(\"Geocode failed \" + status);\n                            LAST_QUERY = CODE_POSTAL;\n                                REQUEST = false;\n                            }\n                        });\n                    }\n                }\n                   \n            }\n            cdm_core.react.render(<Filters onfilter={FILTER_ALL} />,document.querySelector('.wp-block-exm-sales-agent-finder .filters'));\n            let MAP = initMap();\n            TRIER()\n            function findmarkerbyID(id){\n                MAP.markers.forEach(marker => {\n                    if(marker.agent.id == id){\n                        MAP.togglemarker(marker)\n                    }\n                })\n            }\n\n           \n           \n            \n            \n        }//initmap\n\n\n\n    }\n}\n\n\n\nconst List = (props) => {\n    const firstUpdate = React.useRef(true);\n    React.useLayoutEffect(() => {\n        if (firstUpdate.current) {\n          firstUpdate.current = false;\n          return ;\n        }\n    });\n    const {Conditional} = cdm_core.components;\n    const {Collapsible} = cdm_core.components;\n    const Fragment = cdm_core.react.fragment\n    let added = 0;\n\n    return  <Fragment>\n                {props.markers.map(x=>{\n                    if(x.visible  ){\n                        added++;\n                        return  <Collapsible title={cdm_core.fn.HTMLEntities(x.agent.title)} >\n                                    <Agent find={props.find} agent={x.agent} />\n                                </Collapsible>\n                    }\n                })}\n                <Conditional condition={added == 0} >\n                    <p class=\"noresult\">{salesagentfinder_data.lang.noresult}</p>\n                </Conditional>\n            </Fragment>;\n};\n\nconst Filters = (props) => {\n    const {Conditional} = cdm_core.components;\n    const [range,setRange] = cdm_core.react.useState(100);\n    const [postal,setPostal] = cdm_core.react.useState('');\n    const max = 500;\n    const min = 1;    \n    const step = 5;    \n    const modifyRange = (val) => {\n        if((range + val) <= max && (range + val) >= min ){\n            setRange(range + val);\n            props.onfilter({postal:postal,range:range + val})\n        }\n    }\n\n    const resetAll = (e)=>{\n        setPostal('');\n        setRange(100);\n        props.onfilter({postal:'',range:100})\n    };\n\n    const onChangeHandler = (e)=>{\n        setPostal(e.target.value)\n        props.onfilter({postal:e.target.value,range:range})\n    };\n    const onRange = (e) => {\n        setRange(+(e.target.value))\n        props.onfilter({postal:postal,range:+(e.target.value)})\n\n    }\n\n    return <div>\n                <span class=\"form-wrapper\">\n                    <input value={postal} onInput={onChangeHandler} type=\"text\" placeholder={salesagentfinder_data.lang.postal} />\n                    <button ><i class=\"fa fa-search\"></i></button>\n                </span>\n                <span class=\"ranger-wrapper\">\n                    <span class=\"title\" >Max distance: {range}Km <Conditional condition={(range !== 100 || postal !== '')} > <span onClick={resetAll} class=\"reset\">{salesagentfinder_data.lang.reset}</span> </Conditional> </span>\n                    <span class=\"wrap-add\">\n                        <span onClick={()=>modifyRange(-step)}  class=\"moins\">-</span>\n                            <input type=\"range\" min={min} max={max} value={range} onChange={onRange} class=\"slider\" id=\"myRange\" />\n                        <span onClick={()=>modifyRange(step)}  class=\"plus\">+</span>\n                    </span>\n                </span>\n            </div>\n};\n\n\n\n\nconst Agent = (props) => {\n    const {Conditional} = cdm_core.components;\n    const addhttp = (url) => {\n        if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n            url = \"https://\" + url;\n        }\n        return url;\n    }\n    return  <Conditional condition={(props.agent.address.address !== null && props.agent.address.address !== false)} >\n                <div>\n                    <p className=\"address-link\">\n                        <span onClick={() => props.find(props.agent.id)}>{cdm_core.fn.HTMLEntities(props.agent.title)}</span>\n                        <a target=\"_blank\" href={'https://www.google.com/maps/search/?api=1&query=' + encodeURI(props.agent.address.address)}>\n                            {salesagentfinder_data.lang.open}\n                            <i className=\"far fa-external-link\"></i>\n                        </a>\n                    </p>\n                    <p className=\"contacts\">\n                        <Conditional condition={(props.agent.name !== '')} >\n                            <span class=\"title\">{salesagentfinder_data.lang.Contact}: </span><span>{cdm_core.fn.HTMLEntities(props.agent.name)}</span><br/>\n                        </Conditional>\n                        <Conditional condition={(props.agent.phone !== '')} >\n                            <span class=\"title\">{salesagentfinder_data.lang.Telephone}: </span><a href={'tel:'+props.agent.phone.split('').filter(x=>!['-',' ','(',')'].includes(x)).join('')}>{props.agent.phone}</a><br/>\n                        </Conditional>\n                        <Conditional condition={(props.agent.cell_phone !== '')} >\n                            <span class=\"title\">{salesagentfinder_data.lang.Cell} phone: </span><a href={'tel:'+props.agent.phone.split('').filter(x=>!['-',' ','(',')'].includes(x)).join('')}>{props.agent.cell_phone}</a><br/>\n                        </Conditional>\n                        <Conditional condition={(props.agent.fax !== '')} >\n                            <span class=\"title\">{salesagentfinder_data.lang.Fax}: </span><a href={'tel:'+props.agent.phone.split('').filter(x=>!['-',' ','(',')'].includes(x)).join('')}>{props.agent.fax}</a><br/>\n                        </Conditional>\n                        <Conditional condition={(props.agent.email !== '')} >\n                            <span class=\"title\">{salesagentfinder_data.lang.Email}: </span><a href={'mailto:'+props.agent.email} >{props.agent.email}</a><br/>\n                        </Conditional>\n                        <Conditional condition={(props.agent.website !== '')} >\n                            <span class=\"title\">{salesagentfinder_data.lang.Website}: </span><a  rel=\"noopener\" target=\"_blank\" href={addhttp(props.agent.website)} >{props.agent.website}</a><br></br>\n                        </Conditional>\n                        <Conditional condition={(props.agent.address.address !== '')} >\n                            <span class=\"title\">{salesagentfinder_data.lang.Address}: </span><a target=\"_blank\" href={'https://www.google.com/maps/search/?api=1&query=' + encodeURI(props.agent.address.address)} >{props.agent.address.address}</a><br></br>\n                        </Conditional> \n\n                        \n                    </p>\n                </div>\n            </Conditional>\n}\n\n\nfunction initMap(){\n    map = new google.maps.Map(document.getElementById(\"contactmap\"), {\n        center: { lat: -34.397, lng: 150.644 },\n        zoom: 8,\n        mapTypeId: 'custom_style',\n        disableDefaultUI: true,\n        mapTypeControlOptions: { mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'custom_style'] },\n    });      \n    \n    map.mapTypes.set(\n        'custom_style', \n        new google.maps.StyledMapType(GOOGLEMAP_CONFIG.style, {name: 'Custom Style'})\n    );\n\n    const bounds = new google.maps.LatLngBounds();\n    map.markers = salesagentfinder_data.agents.map(agent => {\n        if(agent.address !== false && agent.address !== null){\n            bounds.extend(new google.maps.LatLng(agent.address.lat, agent.address.lng));\n\n            return new google.maps.Marker({\n                position: new google.maps.LatLng(agent.address.lat, agent.address.lng),\n                map,\n                agent:agent,\n                infowindow: new google.maps.InfoWindow({content:document.createElement('div')}),\n                title: agent.address.address\n            });\n        }\n    });// A marker\n    map.fitBounds(bounds,50); \n\n\n    map.togglemarker = (marker) => {\n        map.panTo(marker.getPosition())\n        map.setZoom(12)\n        map.markers.forEach(marker => {marker.infowindow.close()})\n        marker.infowindow.open(map, marker);\n        cdm_core.react.render(<Agent agent={marker.agent} />,marker.infowindow.getContent())\n    }\n\n    map.markers.forEach(marker => {\n        marker.addListener('click',()=>{\n            map.togglemarker(marker)\n        })\n    })\n    return map;\n}\n\n\n\n\n"]}