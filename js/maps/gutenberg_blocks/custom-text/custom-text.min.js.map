{"version":3,"sources":["gutenberg_blocks/custom-text/custom-text.js"],"names":["registerBlockType","wp","blocks","Fragment","element","InspectorControls","editor","_wp$components","components","PanelBody","TextareaControl","SelectControl","ToggleControl","TextControl","customtext_data","suffix","title","lang","icon","category","className","supports","color","background","gradient","text","align","alignWide","attributes","type","default","default_title","fontSize","fontWeight","tag","paddingtop","paddingbottom","textAlign","responsive","responsiveCenter","lineHeight","link","edit","props","React","createElement","style","isSelected","value","onChange","string","setAttributes","href","label","select_label","fs","options","select_label_fw","fw","w_lighter","w_normal","w_bold","select_label_tag","p_tag","h1_tag","h2_tag","h3_tag","h4_tag","h5_tag","h6_tag","select_label_spacing_top","space","select_label_spacing_bottom","select_label_align","ta_left","ta_center","ta_right","responsive_title","help","responsive_help","checked","check","responsiveCenter_title","responsiveCenter_help","text_area_link","val","save"],"mappings":"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","file":"../../../gutenberg_blocks/custom-text/custom-text.min.js","sourcesContent":["const { registerBlockType } = wp.blocks;\n\nconst { Fragment } = wp.element;\nconst { InspectorControls } = wp.editor;\nconst { PanelBody,TextareaControl,SelectControl, ToggleControl, TextControl } = wp.components;\n\n\n\nregisterBlockType(customtext_data.suffix+'/custom-text',{\n\ttitle:customtext_data.lang.title,\n\ticon: 'editor-paragraph',\n    category: 'common',\n    className:'custom-text',\n    \n\tsupports: {\n\t\tcolor:{\n\t\t\tbackground:true,\n\t\t\tgradient:false,\n\t\t\ttext:true\n        },\n        align: true,\n        alignWide: true,\n\t},\n\tattributes:{\n\t\ttext:{\n\t\t\ttype: 'string',\n\t\t\tdefault: customtext_data.lang.default_title\n        },\n        fontSize:{\n\t\t\ttype: 'string',\n\t\t\tdefault: 'fs-16'\n        },\n        fontWeight:{\n\t\t\ttype: 'string',\n\t\t\tdefault: 'fw-normal'\n        },\n        tag:{\n\t\t\ttype: 'string',\n\t\t\tdefault: 'p'\n        },\n        paddingtop:{\n            type: 'string',\n            default: 's-t-10'\n        },\n        paddingbottom:{\n            type: 'string',\n            default: 's-b-10'\n        },\n        textAlign:{\n            type: 'string',\n            default: 'ta-left'\n        },\n        responsive:{\n            type:'boolean',\n            default:false,\n        },\n        responsiveCenter:{\n            type:'boolean',\n            default:false,\n        },\n        lineHeight:{\n            type:'string',\n            default:'ln-1-15'\n\t\t},\n\t\tlink: {\n\t\t\ttype:'string',\n\t\t\tdefault:''\n\t\t}\n    },\n\n\tedit:(props)=>{\n\t\treturn \t<Fragment>\n             \n                    <props.attributes.tag  className={\n                        props.className \n                        + ' ' + \n                        props.attributes.fontSize \n                        + ' ' +\n                        props.attributes.lineHeight \n                        + ' ' +\n                        props.attributes.fontWeight\n                        + ' ' +\n                        props.attributes.paddingtop\n                        + ' ' +\n                        props.attributes.paddingbottom\n                        + ' ' +\n                        props.attributes.textAlign+\n                        ((props.attributes.responsive)?' t-responsive':'')+\n                        ((props.attributes.responsiveCenter)?' c-responsive':'')\n                    } style={props.attributes.style}>\n                        {(props.isSelected)?\n                            <TextareaControl\n                                value={ props.attributes.text }\n                                onChange={ ( string ) => {  \n                                    props.setAttributes({\n                                        text:string\n                                    })\n                                }}\n                            />\n                            :\n\t\t\t\t\t\t\t((props.attributes.link !== '')?\n\t\t\t\t\t\t\t<a href={props.attributes.link} >{props.attributes.text}</a>\n\t\t\t\t\t\t\t:\t\n\t\t\t\t\t\t\tprops.attributes.text)\n\t\t\t\t\t\t\n                        }\n                \n\t\t\t\t\t</props.attributes.tag>\n                    <InspectorControls>\n                        <PanelBody>\n                            <h3>{customtext_data.lang.title}</h3>\n                            <SelectControl\n                                label={customtext_data.lang.select_label}\n                                value={props.attributes.fontSize}\n                                onChange={ ( fs ) => {  \n                                    props.setAttributes({\n                                        fontSize:fs\n                                    })\n                                }}\n                                options={[\n                                    // {value:'fs-14',label:'14px'},\n                                    // {value:'fs-16',label:'16px'},\n                                    {value:'fs-18',label:'Small'},\n                                    {value:'fs-20',label:'Medium'},\n                                    {value:'fs-36',label:'Large'},\n                                    // {value:'fs-40',label:'40px'},\n                                    {value:'fs-70',label:'X-Large'},\n                                ]}\n                            />\n                            <SelectControl\n                                label={customtext_data.lang.select_label_fw}\n                                value={props.attributes.fontWeight}\n                                onChange={ ( fw ) => {  \n                                    props.setAttributes({\n                                        fontWeight:fw\n                                    })\n                                }}\n                                options={[\n                                    {value:'fw-lighter',label:customtext_data.lang.w_lighter},\n                                    {value:'fw-normal',label:customtext_data.lang.w_normal},\n                                    {value:'fw-bold',label:customtext_data.lang.w_bold},\n                                    // {value:'fw-bolder',label:customtext_data.lang.w_bolder}\n                                ]}\n                            />\n                            <SelectControl\n                                label={customtext_data.lang.select_label_tag}\n                                value={props.attributes.tag}\n                                onChange={ ( tag ) => {  \n                                    props.setAttributes({\n                                        tag:tag\n                                    })\n                                }}\n                                options={[\n                                    {value:'p',label:customtext_data.lang.p_tag},\n                                    {value:'h1',label:customtext_data.lang.h1_tag},\n                                    {value:'h2',label:customtext_data.lang.h2_tag},\n                                    {value:'h3',label:customtext_data.lang.h3_tag},\n                                    {value:'h4',label:customtext_data.lang.h4_tag},\n                                    {value:'h5',label:customtext_data.lang.h5_tag},\n                                    {value:'h6',label:customtext_data.lang.h6_tag}\n                                ]}\n                            />\n                            <SelectControl\n                                label={customtext_data.lang.select_label_spacing_top}\n                                value={props.attributes.paddingtop}\n                                onChange={ ( space ) => {  \n                                    props.setAttributes({\n                                        paddingtop:space\n                                    })\n                                }}\n                                options={[\n                                    {value:'s-t-0', label:'None'},\n                                    // {value:'s-t-5', label:'5px'},\n                                    // {value:'s-t-10',label:'10px'},\n                                    {value:'s-t-15',label:'Small'},\n                                    {value:'s-t-20',label:'Medium'},\n                                    // {value:'s-t-30',label:'30px'},\n                                    {value:'s-t-40',label:'Large'}\n                                ]}\n                            />\n                            <SelectControl\n                                label={customtext_data.lang.select_label_spacing_bottom}\n                                value={props.attributes.paddingbottom}\n                                onChange={ ( space ) => {  \n                                    props.setAttributes({\n                                        paddingbottom:space\n                                    })\n                                }}\n                                options={[\n                                    {value:'s-b-0', label:'None'},\n                                    // {value:'s-b-5', label:'5px'},\n                                    // {value:'s-b-10',label:'10px'},\n                                    {value:'s-b-15',label:'Small'},\n                                    {value:'s-b-20',label:'Medium'},\n                                    // {value:'s-b-30',label:'30px'},\n                                    {value:'s-b-40',label:'Large'}\n                                ]}\n                            />\n                            <SelectControl\n                                label={customtext_data.lang.select_label_align}\n                                value={props.attributes.textAlign}\n                                onChange={ ( align ) => {  \n                                    props.setAttributes({\n                                        textAlign:align\n                                    })\n                                }}\n                                options={[\n                                    {value:'ta-left', label:customtext_data.lang.ta_left},\n                                    {value:'ta-center', label:customtext_data.lang.ta_center},\n                                    {value:'ta-right',label:customtext_data.lang.ta_right}\n                                ]}\n                            />\n                            {/* <SelectControl\n                                label={customtext_data.lang.select_label_ln}\n                                value={props.attributes.lineHeight}\n                                onChange={ ( val ) => {  \n                                    props.setAttributes({\n                                        lineHeight:val\n                                    })\n                                }}\n                                options={[\n                                    {value:'ln-1',label:'1'},\n                                    {value:'ln-1-15',label:'1,15'},\n                                    {value:'ln-1-25',label:'1,25'},\n                                    {value:'ln-1-33',label:'1,33'},\n                                    {value:'ln-1-5',label:'1,5'},\n                                    {value:'ln-1-75',label:'1,75'},\n                                    {value:'ln-1-90',label:'1,9'},\n                                    {value:'ln-2',label:'2'}\n                                ]}\n                            /> */}  \n                            <ToggleControl\n                                label={customtext_data.lang.responsive_title}\n                                help={customtext_data.lang.responsive_help}\n                                checked={props.attributes.responsive}\n                                onChange={check => {\n                                    props.setAttributes({\n                                        responsive:check\n                                    })\n                                }}\n                            />\n                            <ToggleControl\n                                label={customtext_data.lang.responsiveCenter_title}\n                                help={customtext_data.lang.responsiveCenter_help}\n                                checked={props.attributes.responsiveCenter}\n                                onChange={check => {\n                                    props.setAttributes({\n                                        responsiveCenter:check\n                                    })\n                                }}\n                            />\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={customtext_data.lang.text_area_link}\n\t\t\t\t\t\t\t\tvalue={props.attributes.link}\n\t\t\t\t\t\t\t\tonChange={val => {\n                                    props.setAttributes({\n                                        link:val\n                                    })\n                                }}\n\t\t\t\t\t\t\t/>\n                        </PanelBody>\n                    </InspectorControls>\n\t\t\t\t</Fragment>\n\t},\n    save:(props) => {\n\n        return \t<props.attributes.tag  className={\n                    props.className \n                    + ' ' + \n                    props.attributes.fontSize \n                    + ' ' +\n                    props.attributes.lineHeight \n                    + ' ' +\n                    props.attributes.fontWeight\n                    + ' ' +\n                    props.attributes.paddingtop\n                    + ' ' +\n                    props.attributes.paddingbottom\n                    + ' ' +\n                    props.attributes.textAlign+\n                    ((props.attributes.responsive)?' t-responsive':'')+\n                    ((props.attributes.responsiveCenter)?' c-responsive':'')\n                } style={props.attributes.style}>\n\t\t\t\t\t{\t(props.attributes.link !== '')?\n\t\t\t\t\t\t<a href={props.attributes.link} >{props.attributes.text}</a>\n\t\t\t\t\t\t:\t\n\t\t\t\t\t\tprops.attributes.text\n\t\t\t\t\t}\t\n\t\t\t\t</props.attributes.tag>; \n\t},\n});"]}