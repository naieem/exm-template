{"version":3,"sources":["gutenberg_blocks/custom-text/custom-text.js"],"names":["registerBlockType","wp","blocks","Fragment","element","InspectorControls","editor","_wp$components","components","PanelBody","TextareaControl","SelectControl","ToggleControl","TextControl","customtext_data","suffix","title","lang","icon","category","className","supports","color","background","gradient","text","align","alignWide","attributes","type","default","default_title","fontSize","fontWeight","tag","paddingtop","paddingbottom","textAlign","responsive","responsiveCenter","lineHeight","link","edit","props","React","createElement","style","isSelected","value","onChange","string","setAttributes","href","label","select_label","fs","options","select_label_fw","fw","w_lighter","w_normal","w_bold","select_label_tag","p_tag","h1_tag","h2_tag","h3_tag","h4_tag","h5_tag","h6_tag","select_label_spacing_top","space","select_label_spacing_bottom","select_label_align","ta_left","ta_center","ta_right","responsive_title","help","responsive_help","checked","check","responsiveCenter_title","responsiveCenter_help","text_area_link","val","save"],"mappings":"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","file":"../../../gutenberg_blocks/custom-text/custom-text.min.js","sourcesContent":["const { registerBlockType } = wp.blocks;\r\n\r\nconst { Fragment } = wp.element;\r\nconst { InspectorControls } = wp.editor;\r\nconst { PanelBody,TextareaControl,SelectControl, ToggleControl, TextControl } = wp.components;\r\n\r\n\r\n\r\nregisterBlockType(customtext_data.suffix+'/custom-text',{\r\n\ttitle:customtext_data.lang.title,\r\n\ticon: 'editor-paragraph',\r\n    category: 'common',\r\n    className:'custom-text',\r\n    \r\n\tsupports: {\r\n\t\tcolor:{\r\n\t\t\tbackground:true,\r\n\t\t\tgradient:false,\r\n\t\t\ttext:true\r\n        },\r\n        align: true,\r\n        alignWide: true,\r\n\t},\r\n\tattributes:{\r\n\t\ttext:{\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: customtext_data.lang.default_title\r\n        },\r\n        fontSize:{\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: 'fs-16'\r\n        },\r\n        fontWeight:{\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: 'fw-normal'\r\n        },\r\n        tag:{\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: 'p'\r\n        },\r\n        paddingtop:{\r\n            type: 'string',\r\n            default: 's-t-10'\r\n        },\r\n        paddingbottom:{\r\n            type: 'string',\r\n            default: 's-b-10'\r\n        },\r\n        textAlign:{\r\n            type: 'string',\r\n            default: 'ta-left'\r\n        },\r\n        responsive:{\r\n            type:'boolean',\r\n            default:false,\r\n        },\r\n        responsiveCenter:{\r\n            type:'boolean',\r\n            default:false,\r\n        },\r\n        lineHeight:{\r\n            type:'string',\r\n            default:'ln-1-15'\r\n\t\t},\r\n\t\tlink: {\r\n\t\t\ttype:'string',\r\n\t\t\tdefault:''\r\n\t\t}\r\n    },\r\n\r\n\tedit:(props)=>{\r\n\t\treturn \t<Fragment>\r\n             \r\n                    <props.attributes.tag  className={\r\n                        props.className \r\n                        + ' ' + \r\n                        props.attributes.fontSize \r\n                        + ' ' +\r\n                        props.attributes.lineHeight \r\n                        + ' ' +\r\n                        props.attributes.fontWeight\r\n                        + ' ' +\r\n                        props.attributes.paddingtop\r\n                        + ' ' +\r\n                        props.attributes.paddingbottom\r\n                        + ' ' +\r\n                        props.attributes.textAlign+\r\n                        ((props.attributes.responsive)?' t-responsive':'')+\r\n                        ((props.attributes.responsiveCenter)?' c-responsive':'')\r\n                    } style={props.attributes.style}>\r\n                        {(props.isSelected)?\r\n                            <TextareaControl\r\n                                value={ props.attributes.text }\r\n                                onChange={ ( string ) => {  \r\n                                    props.setAttributes({\r\n                                        text:string\r\n                                    })\r\n                                }}\r\n                            />\r\n                            :\r\n\t\t\t\t\t\t\t((props.attributes.link !== '')?\r\n\t\t\t\t\t\t\t<a href={props.attributes.link} >{props.attributes.text}</a>\r\n\t\t\t\t\t\t\t:\t\r\n\t\t\t\t\t\t\tprops.attributes.text)\r\n\t\t\t\t\t\t\r\n                        }\r\n                \r\n\t\t\t\t\t</props.attributes.tag>\r\n                    <InspectorControls>\r\n                        <PanelBody>\r\n                            <h3>{customtext_data.lang.title}</h3>\r\n                            <SelectControl\r\n                                label={customtext_data.lang.select_label}\r\n                                value={props.attributes.fontSize}\r\n                                onChange={ ( fs ) => {  \r\n                                    props.setAttributes({\r\n                                        fontSize:fs\r\n                                    })\r\n                                }}\r\n                                options={[\r\n                                    // {value:'fs-14',label:'14px'},\r\n                                    // {value:'fs-16',label:'16px'},\r\n                                    {value:'fs-18',label:'Small'},\r\n                                    {value:'fs-20',label:'Medium'},\r\n                                    {value:'fs-36',label:'Large'},\r\n                                    // {value:'fs-40',label:'40px'},\r\n                                    {value:'fs-70',label:'X-Large'},\r\n                                ]}\r\n                            />\r\n                            <SelectControl\r\n                                label={customtext_data.lang.select_label_fw}\r\n                                value={props.attributes.fontWeight}\r\n                                onChange={ ( fw ) => {  \r\n                                    props.setAttributes({\r\n                                        fontWeight:fw\r\n                                    })\r\n                                }}\r\n                                options={[\r\n                                    {value:'fw-lighter',label:customtext_data.lang.w_lighter},\r\n                                    {value:'fw-normal',label:customtext_data.lang.w_normal},\r\n                                    {value:'fw-bold',label:customtext_data.lang.w_bold},\r\n                                    // {value:'fw-bolder',label:customtext_data.lang.w_bolder}\r\n                                ]}\r\n                            />\r\n                            <SelectControl\r\n                                label={customtext_data.lang.select_label_tag}\r\n                                value={props.attributes.tag}\r\n                                onChange={ ( tag ) => {  \r\n                                    props.setAttributes({\r\n                                        tag:tag\r\n                                    })\r\n                                }}\r\n                                options={[\r\n                                    {value:'p',label:customtext_data.lang.p_tag},\r\n                                    {value:'h1',label:customtext_data.lang.h1_tag},\r\n                                    {value:'h2',label:customtext_data.lang.h2_tag},\r\n                                    {value:'h3',label:customtext_data.lang.h3_tag},\r\n                                    {value:'h4',label:customtext_data.lang.h4_tag},\r\n                                    {value:'h5',label:customtext_data.lang.h5_tag},\r\n                                    {value:'h6',label:customtext_data.lang.h6_tag}\r\n                                ]}\r\n                            />\r\n                            <SelectControl\r\n                                label={customtext_data.lang.select_label_spacing_top}\r\n                                value={props.attributes.paddingtop}\r\n                                onChange={ ( space ) => {  \r\n                                    props.setAttributes({\r\n                                        paddingtop:space\r\n                                    })\r\n                                }}\r\n                                options={[\r\n                                    {value:'s-t-0', label:'None'},\r\n                                    // {value:'s-t-5', label:'5px'},\r\n                                    // {value:'s-t-10',label:'10px'},\r\n                                    {value:'s-t-15',label:'Small'},\r\n                                    {value:'s-t-20',label:'Medium'},\r\n                                    // {value:'s-t-30',label:'30px'},\r\n                                    {value:'s-t-40',label:'Large'}\r\n                                ]}\r\n                            />\r\n                            <SelectControl\r\n                                label={customtext_data.lang.select_label_spacing_bottom}\r\n                                value={props.attributes.paddingbottom}\r\n                                onChange={ ( space ) => {  \r\n                                    props.setAttributes({\r\n                                        paddingbottom:space\r\n                                    })\r\n                                }}\r\n                                options={[\r\n                                    {value:'s-b-0', label:'None'},\r\n                                    // {value:'s-b-5', label:'5px'},\r\n                                    // {value:'s-b-10',label:'10px'},\r\n                                    {value:'s-b-15',label:'Small'},\r\n                                    {value:'s-b-20',label:'Medium'},\r\n                                    // {value:'s-b-30',label:'30px'},\r\n                                    {value:'s-b-40',label:'Large'}\r\n                                ]}\r\n                            />\r\n                            <SelectControl\r\n                                label={customtext_data.lang.select_label_align}\r\n                                value={props.attributes.textAlign}\r\n                                onChange={ ( align ) => {  \r\n                                    props.setAttributes({\r\n                                        textAlign:align\r\n                                    })\r\n                                }}\r\n                                options={[\r\n                                    {value:'ta-left', label:customtext_data.lang.ta_left},\r\n                                    {value:'ta-center', label:customtext_data.lang.ta_center},\r\n                                    {value:'ta-right',label:customtext_data.lang.ta_right}\r\n                                ]}\r\n                            />\r\n                            {/* <SelectControl\r\n                                label={customtext_data.lang.select_label_ln}\r\n                                value={props.attributes.lineHeight}\r\n                                onChange={ ( val ) => {  \r\n                                    props.setAttributes({\r\n                                        lineHeight:val\r\n                                    })\r\n                                }}\r\n                                options={[\r\n                                    {value:'ln-1',label:'1'},\r\n                                    {value:'ln-1-15',label:'1,15'},\r\n                                    {value:'ln-1-25',label:'1,25'},\r\n                                    {value:'ln-1-33',label:'1,33'},\r\n                                    {value:'ln-1-5',label:'1,5'},\r\n                                    {value:'ln-1-75',label:'1,75'},\r\n                                    {value:'ln-1-90',label:'1,9'},\r\n                                    {value:'ln-2',label:'2'}\r\n                                ]}\r\n                            /> */}  \r\n                            <ToggleControl\r\n                                label={customtext_data.lang.responsive_title}\r\n                                help={customtext_data.lang.responsive_help}\r\n                                checked={props.attributes.responsive}\r\n                                onChange={check => {\r\n                                    props.setAttributes({\r\n                                        responsive:check\r\n                                    })\r\n                                }}\r\n                            />\r\n                            <ToggleControl\r\n                                label={customtext_data.lang.responsiveCenter_title}\r\n                                help={customtext_data.lang.responsiveCenter_help}\r\n                                checked={props.attributes.responsiveCenter}\r\n                                onChange={check => {\r\n                                    props.setAttributes({\r\n                                        responsiveCenter:check\r\n                                    })\r\n                                }}\r\n                            />\r\n\t\t\t\t\t\t\t<TextControl\r\n\t\t\t\t\t\t\t\tlabel={customtext_data.lang.text_area_link}\r\n\t\t\t\t\t\t\t\tvalue={props.attributes.link}\r\n\t\t\t\t\t\t\t\tonChange={val => {\r\n                                    props.setAttributes({\r\n                                        link:val\r\n                                    })\r\n                                }}\r\n\t\t\t\t\t\t\t/>\r\n                        </PanelBody>\r\n                    </InspectorControls>\r\n\t\t\t\t</Fragment>\r\n\t},\r\n    save:(props) => {\r\n\r\n        return \t<props.attributes.tag  className={\r\n                    props.className \r\n                    + ' ' + \r\n                    props.attributes.fontSize \r\n                    + ' ' +\r\n                    props.attributes.lineHeight \r\n                    + ' ' +\r\n                    props.attributes.fontWeight\r\n                    + ' ' +\r\n                    props.attributes.paddingtop\r\n                    + ' ' +\r\n                    props.attributes.paddingbottom\r\n                    + ' ' +\r\n                    props.attributes.textAlign+\r\n                    ((props.attributes.responsive)?' t-responsive':'')+\r\n                    ((props.attributes.responsiveCenter)?' c-responsive':'')\r\n                } style={props.attributes.style}>\r\n\t\t\t\t\t{\t(props.attributes.link !== '')?\r\n\t\t\t\t\t\t<a href={props.attributes.link} >{props.attributes.text}</a>\r\n\t\t\t\t\t\t:\t\r\n\t\t\t\t\t\tprops.attributes.text\r\n\t\t\t\t\t}\t\r\n\t\t\t\t</props.attributes.tag>; \r\n\t},\r\n});"]}