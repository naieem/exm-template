{"version":3,"sources":["gutenberg_blocks/locationlist/locationlist-render.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Object","toString","call","Array","from","isArray","i","arr2","length","cdm_core","fn","docReady","build_locationlist","document","querySelector","Collapsible","components","sorted_by_state","locationlist_data","locations","forEach","loc","address","country","state","concat","items","country_key","keys","sort","reverse","map","state_key","React","createElement","Loc","phone","email","push","title","react","render","List","google","maps","initMap","Map","getElementById","center","lat","lng","zoom","mapTypeId","disableDefaultUI","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","mapTypes","set","StyledMapType","GOOGLEMAP_CONFIG","style","name","bounds","LatLngBounds","markers","extend","LatLng","Marker","position","infowindow","InfoWindow","content","marker","addListener","panTo","getPosition","setZoom","close","open","getContent","props","Fragment","fragment","Conditional","condition","className","target","href","encodeURI","lang","split","filter","x","includes","join"],"mappings":"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","file":"../../../gutenberg_blocks/locationlist/locationlist-render.min.js","sourcesContent":["\r\ncdm_core.fn.docReady(()=>build_locationlist())\r\n\r\nconst build_locationlist = () => {\r\n    if(document.querySelector('.wp-block-exm-locationlist .locations')){\r\n        const {Collapsible} = cdm_core.components;\r\n        let sorted_by_state = {};\r\n        locationlist_data.locations.forEach(loc => {\r\n            if(!sorted_by_state[loc.address.country]){\r\n                sorted_by_state[loc.address.country]={};\r\n            }\r\n            if(!sorted_by_state[loc.address.country][loc.address.state]){\r\n                sorted_by_state[loc.address.country][loc.address.state] = [loc]\r\n            }else{\r\n                sorted_by_state[loc.address.country][loc.address.state] = [...sorted_by_state[loc.address.country][loc.address.state],loc]\r\n            }\r\n        });\r\n\r\n        const items = [];\r\n        ['Canada','United States','China'].forEach(country_key => {\r\n            var arr = country_key != 'United States'?Object.keys(sorted_by_state[country_key]).sort().reverse():Object.keys(sorted_by_state[country_key]);\r\n            arr.map( state_key => {\r\n                let locations = sorted_by_state[country_key][state_key].map(loc => <Loc address={loc.address.address} phone={loc.phone} email={loc.email} />);\r\n                items.push(<Collapsible title={country_key == 'China'?country_key:state_key+', '+country_key } >{locations}</Collapsible>)\r\n            })\r\n        })\r\n        delete sorted_by_state['Canada'];\r\n        delete sorted_by_state['United States'];\r\n        delete sorted_by_state['China'];\r\n\r\n        Object.keys(sorted_by_state).forEach(country_key => {\r\n            Object.keys(sorted_by_state[country_key]).map( state_key => {\r\n                let locations = sorted_by_state[country_key][state_key].map(loc => <Loc address={loc.address.address} phone={loc.phone} email={loc.email} />);\r\n                items.push(<Collapsible title={state_key+', '+country_key } >{locations}</Collapsible>)\r\n            })\r\n        })\r\n\r\n        cdm_core.react.render(<List items={items} />,document.querySelector('.wp-block-exm-locationlist .locations'));\r\n\r\n        if (typeof google === 'object' && typeof google.maps === 'object') {\r\n            initMap()\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst initMap = ()=>{\r\n    map = new google.maps.Map(document.getElementById(\"contactmap\"), {\r\n        center: { lat: 28.564421989707274, lng: 0.8286596820654424 },\r\n        zoom: 2,\r\n        mapTypeId: 'custom_style',\r\n        disableDefaultUI: true,\r\n        mapTypeControlOptions: { mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'custom_style'] },\r\n    });      \r\n    \r\n    map.mapTypes.set(\r\n        'custom_style', \r\n        new google.maps.StyledMapType(GOOGLEMAP_CONFIG.style, {name: 'Custom Style'})\r\n    );\r\n\r\n    const bounds = new google.maps.LatLngBounds();\r\n    map.markers = locationlist_data.locations.map(loc => {\r\n        if(loc.address !== false && loc.address !== null){\r\n            bounds.extend(new google.maps.LatLng(loc.address.lat, loc.address.lng));\r\n\r\n            return new google.maps.Marker({\r\n                position: new google.maps.LatLng(loc.address.lat, loc.address.lng),\r\n                map,\r\n                loc:loc,\r\n                infowindow: new google.maps.InfoWindow({content:document.createElement('div')}),\r\n                title: loc.address.address\r\n            }); \r\n        }\r\n    });// A marker\r\n    // map.fitBounds(bounds,50); \r\n\r\n    map.markers.forEach(marker => {\r\n        marker.addListener('click',()=>{\r\n            //map.setZoom(12)\r\n            map.panTo(marker.getPosition())\r\n            map.setZoom(12)\r\n            map.markers.forEach(marker => {marker.infowindow.close()})\r\n            marker.infowindow.open(map, marker);\r\n            cdm_core.react.render(<Loc address={marker.loc.address.address} phone={marker.loc.phone}   email={marker.loc.email} />,marker.infowindow.getContent())\r\n\r\n        })\r\n    })\r\n\r\n    \r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\nconst List = (props) => {\r\n    const Fragment = cdm_core.react.fragment\r\n    return  <Fragment>\r\n                {props.items}\r\n            </Fragment>;\r\n};\r\n\r\n\r\n\r\n\r\nconst Loc = (props) => {\r\n    const {Conditional} = cdm_core.components\r\n    return  <Conditional condition={(props.address !== null && props.address !== false)} >\r\n                <div>\r\n                    <p className=\"address-link\">\r\n\r\n                        <span>{props.address}</span>\r\n                        <a target=\"_blank\" href={'https://www.google.com/maps/search/?api=1&query=' + encodeURI(props.address)}>\r\n                            {locationlist_data.lang.open}\r\n                            <i className=\"far fa-external-link\"></i>\r\n                        </a>\r\n                    </p>\r\n                    <p className=\"contacts\">\r\n                        <Conditional condition={(props.phone !== '')} >\r\n                            <a href={'tel:'+props.phone.split('').filter(x=>!['-',' ','(',')'].includes(x)).join('')}>{props.phone}</a>\r\n                        </Conditional>\r\n                        \r\n                        <br/>\r\n                        <Conditional condition={(props.email !== '')} >\r\n                            <a href={'mailto:'+props.email} >{props.email}</a>\r\n                        </Conditional>\r\n                        \r\n                    </p>\r\n                </div>\r\n            </Conditional>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}