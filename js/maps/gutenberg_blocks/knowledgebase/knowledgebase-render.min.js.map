{"version":3,"sources":["gutenberg_blocks/knowledgebase/knowledgebase-render.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","cdm_core","fn","docReady","build_knowledgebase","document","querySelector","react","render","React","createElement","Knowledgebase","docs","knowledgebase_data","props","Fragment","fragment","_cdm_core$react$useSt2","useState","currentcat","setCurrentcat","_cdm_core$react$useSt4","router","setRouter","Conditional","components","useEffect","buildForm","hr","className","parentNode","insertBefore","nextSibling","fil_ariane","class","lang","howhelp","type","name","id","onChange","onKeyupHandlerSearch","placeholder","search","onClick","onClickHandlerSearch","base","href","e","preventDefault","navigateHistory","ariane_base","fil","flatMap","x","doc","filter","y","ID","aria-hidden","HTMLEntities","concat","window","onpopstate","event","back","navigate","getElementById","target","get_current_level","parent_category","is_category","toLowerCase","replace","includes","to","index","indexOf","slice","scrollIntoView","condition","map","Knowledgebase_cell","clickFn","image","file","title","empty","search_empty","ImageWP","open","url","src"],"mappings":"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","file":"../../../gutenberg_blocks/knowledgebase/knowledgebase-render.min.js","sourcesContent":["\r\ncdm_core.fn.docReady(()=>build_knowledgebase())\r\n\r\n\r\nconst build_knowledgebase = () => {\r\n  \r\n    \r\n    if(document.querySelector('.wp-block-exm-knowledgebase')){\r\n        cdm_core.react.render(<Knowledgebase docs={knowledgebase_data.docs} />,document.querySelector('.wp-block-exm-knowledgebase'));\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst Knowledgebase = (props)=>{\r\n    const Fragment = cdm_core.react.fragment;\r\n    const [currentcat,setCurrentcat] = cdm_core.react.useState(null);\r\n    const [router,setRouter] = cdm_core.react.useState([]);\r\n    const {Conditional} = cdm_core.components;\r\n    const search = '';\r\n\r\n    // passing an empty array as second argument triggers the callback in useEffect\r\n    // only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n    React.useEffect(() => {\r\n        buildForm();\r\n        if(document.querySelector('.wrap-extra') !== undefined){\r\n            let hr = document.createElement('hr');\r\n            hr.className = \"p-0 m-0 has-color-2-background-color has-background\";\r\n            document.querySelector('.wrap-extra').parentNode.insertBefore(hr, document.querySelector('.wrap-extra').nextSibling);\r\n        }\r\n    }, []);\r\n    React.useEffect(() => {\r\n        fil_ariane();\r\n        \r\n    }) ;\r\n\r\n    const buildForm = function (){         \r\n        if(document.querySelector('banner-extra.content .right') !== undefined){\r\n            cdm_core.react.render(\r\n                <div class=\"search_box\"> \r\n                    <h4>{knowledgebase_data.lang.howhelp}</h4>\r\n                    <div class=\"form-wrapper\">\r\n                        <input type=\"text\" name=\"s\" id=\"search\" onChange={onKeyupHandlerSearch}  placeholder={knowledgebase_data.lang.search} /><button onClick={onClickHandlerSearch} class=\"search-knowledge\"><i class=\"fal fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n            ,document.querySelector('.banner-extra.content .right'));\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const fil_ariane = function(){\r\n        const base = [<a href=\"#\" onClick={(e)=>{e.preventDefault();navigateHistory(null)}} >{knowledgebase_data.lang.ariane_base}</a>]\r\n        const fil = router.flatMap(x=>{\r\n            const doc = props.docs.filter(y=>y.ID == x);\r\n            if(doc.length > 0){\r\n                return [<i class=\"fal fa-angle-right\" aria-hidden=\"true\"></i>,<a onClick={(e)=>{e.preventDefault();navigateHistory(doc[0].ID)}} href={doc[0].ID} >{cdm_core.fn.HTMLEntities(doc[0].name)}</a>]\r\n            }\r\n        });\r\n        let fil_ariane = base.concat(fil);\r\n        if(currentcat){\r\n            const doc = props.docs.filter(y=>y.ID == currentcat);\r\n            if(doc.length > 0){\r\n                fil_ariane = fil_ariane.concat([<i class=\"fal fa-angle-right\" aria-hidden=\"true\"></i>,<span>{cdm_core.fn.HTMLEntities(doc[0].name)}</span>]);\r\n            }\r\n        }\r\n\r\n        if(document.querySelector('div.breadcrumb') !== undefined){\r\n            cdm_core.react.render(\r\n                <Fragment>\r\n                    {fil_ariane}\r\n                </Fragment>\r\n            ,document.querySelector('div.breadcrumb'));\r\n        }\r\n    }\r\n\r\n\r\n    window.onpopstate = function(event) {\r\n        if(router.length > 0){\r\n            event.preventDefault();\r\n            back()\r\n        }\r\n    };\r\n    \r\n\r\n    const onClickHandlerSearch = () => {\r\n        navigate(document.getElementById('search').value)\r\n    }\r\n    const onKeyupHandlerSearch = (e) => {\r\n        navigate(e.target.value)\r\n    }\r\n    const get_current_level = () => {\r\n        let sorted = [];\r\n\r\n        if(currentcat == null){\r\n            sorted = props.docs.filter(x=>(x.parent_category == null || x.parent_category == 0) && x.is_category == true);\r\n        }else if(typeof currentcat == 'string'){\r\n            sorted = props.docs.filter(x=>(x.name.toLowerCase().replace(' ','').includes(currentcat.toLowerCase().replace(' ',''))));\r\n        }else {\r\n            sorted = props.docs.filter(x=>x.parent_category == currentcat );\r\n        }\r\n        return sorted;\r\n    }\r\n\r\n    const navigateHistory = (to)=>{\r\n        \r\n        const index = router.indexOf(to);\r\n        setRouter(router.slice(0,index))\r\n        setCurrentcat(to);\r\n    }\r\n\r\n    const navigate = (id)=>{\r\n        document.querySelector('.banner-top').scrollIntoView(true)\r\n        setRouter([...router,currentcat])\r\n        setCurrentcat(id);\r\n    }\r\n\r\n    const back = ()=>{\r\n        const to = router[router.length-1];\r\n        setRouter(router.filter(x => x!=to))\r\n        setCurrentcat(to);\r\n    }\r\n\r\n    const buildCells = ()=>{\r\n        return get_current_level().map(doc=>{\r\n            return <Knowledgebase_cell clickFn={navigate} image={doc.image} is_category={doc.is_category} file={doc.file} title={doc.name} id={doc.ID} />\r\n        })\r\n    }\r\n\r\n\r\n    return  <Fragment>\r\n                <Conditional condition={router.length > 0} >\r\n                    <button onClick={back} >{knowledgebase_data.lang.back}</button>\r\n                </Conditional>\r\n                <Conditional condition={typeof currentcat == 'string'} >\r\n                    <p class=\"empty\" > {currentcat}</p>\r\n                </Conditional>\r\n                <Conditional condition={get_current_level().length > 0} >\r\n                    <div>{buildCells()}</div>\r\n                </Conditional>\r\n                <Conditional condition={get_current_level().length == 0 && typeof currentcat != 'string'} >\r\n                    <p class=\"empty\" > {knowledgebase_data.lang.empty}</p>\r\n                </Conditional>\r\n                <Conditional condition={get_current_level().length == 0 && typeof currentcat == 'string'} >\r\n                    <p class=\"empty\" > {knowledgebase_data.lang.search_empty}</p>\r\n                </Conditional>\r\n            </Fragment>\r\n}\r\n\r\nconst Knowledgebase_cell = (props) => {\r\n\r\n    const clickBehavior = () => {\r\n        if(props.file == null || props.file == false){\r\n            props.clickFn(props.id)\r\n        }else{\r\n            open(props.file.url)\r\n        }\r\n    }\r\n\r\n    const {ImageWP} = cdm_core.components;\r\n    return  <div onClick={clickBehavior} > \r\n                <ImageWP src={props.image} />\r\n                <span>{cdm_core.fn.HTMLEntities(props.title)}</span>\r\n            </div>\r\n}\r\n\r\n"]}