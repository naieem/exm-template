{"version":3,"sources":["wp_reverse_columns.js"],"names":["addFilter","wp","hooks","createHigherOrderComponent","compose","Fragment","element","InspectorControls","blockEditor","_wp$components","components","PanelBody","CheckboxControl","activated_reverse","name","includes","addRellaxOption","props","attributes","Object","assign","reverse_cols","type","default","withReverseControl","BlockEdit","React","createElement","label","checked","onChange","val","setAttributes","ReverseExtraProps","saveElementProps","blockType","reverse","className"],"mappings":"AACA,IAAQA,UAAcC,GAAGC,MAAjBF,UAEAG,2BAA+BF,GAAGG,QAAlCD,2BACAE,SAAaJ,GAAGK,QAAhBD,SACAE,kBAAsBN,GAAGO,YAAzBD,kBACRE,eAAuCR,GAAGS,WAAlCC,UAASF,eAATE,UAAWC,gBAAeH,eAAfG,gBAEfC,kBAAoB,SAASC,GAC7B,MAAO,CACT,gBACIC,SAASD,EACf,EAIME,gBAAkB,SAAEC,EAAOH,GAUhC,OATGD,kBAAkBC,KAEpBG,EAAMC,WAAaC,OAAOC,OAAQH,EAAMC,WAAY,CACnDG,aAAc,CACbC,KAAM,UACNC,SAAS,MAILN,CACR,EAAEjB,UAAW,2BAA4B,0BAA2BgB,iBAKpE,IAAMQ,mBAAqBrB,4BAA4B,SAAEsB,GACxD,OAAO,SAAER,GACR,OAAKJ,kBAAkBI,EAAMH,MAG5BY,MAAAC,cAACtB,SAAQ,KACRqB,MAAAC,cAACF,EAAeR,GAChBS,MAAAC,cAACpB,kBAAiB,KAChBmB,MAAAC,cAAChB,UAAS,KACQe,MAAAC,cAAA,KAAA,KAAI,6BACJD,MAAAC,cAACf,gBAAe,CACjCgB,MAAM,UACNC,QAASZ,EAAMC,WAAWG,aAC1BS,SAAY,SAACC,GACwBd,EAAMe,cAAc,CAChBX,aAAaU,GAErB,OAfUL,MAAAC,cAACF,EAAeR,EAuBjE,CACD,GAAG,sBACHjB,UAAW,mBAAoB,8BAA+BwB,oBAE9D,IAAMS,kBAAoB,SAAEC,EAAkBC,EAAWjB,GACrD,GAAKL,kBAAkBsB,EAAUrB,OAChCI,EAAWG,aAAa,CAC1B,IAAIe,EAAUlB,EAAWG,aACtBe,GACFjB,OAAOC,OAAQc,EAAkB,CAChCG,UAAYH,EAAiBG,WAAcD,EAAS,kBAAkB,KAIzE,CAED,OAAOF,CACR,EAAElC,UAAW,mCAAoC,uCAAwCiC","file":"../wp_reverse_columns.min.js","sourcesContent":["//importe le hook addfilter et la localisation\nconst { addFilter } = wp.hooks;\n\nconst { createHigherOrderComponent } = wp.compose;\nconst { Fragment } = wp.element;\nconst { InspectorControls } = wp.blockEditor;\nconst { PanelBody, CheckboxControl } = wp.components;\n\nlet activated_reverse = function(name){\n    return [\n\t\t'core/columns'\n    ].includes(name);\n}\n/**\n * Ajoute un props au block\n */\nconst addRellaxOption = ( props, name ) => {\n\tif(activated_reverse(name)){\n\t\t// on ajoute l'attribut et on ajoute une valeur par dÃ©faut\n\t\tprops.attributes = Object.assign( props.attributes, {\n\t\t\treverse_cols: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t} );\n\t}\n\treturn props;\n};addFilter( 'blocks.registerBlockType', 'rellax/attribute/rellax', addRellaxOption );\n/**\n * Ajoute un controle dans la sidebar pour le plugin \n *\n */\nconst withReverseControl = createHigherOrderComponent( ( BlockEdit ) => {\n\treturn ( props ) => {\n\t\tif (!activated_reverse(props.name)) { return  ( <BlockEdit { ...props } /> ) ; }\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<PanelBody>\n                        <h3>Reverse Columns on mobile</h3>\n                        <CheckboxControl\n\t\t\t\t\t\t\tlabel=\"Reverse\"\n\t\t\t\t\t\t\tchecked={props.attributes.reverse_cols}\n\t\t\t\t\t\t\tonChange={  (val)=>{\n                                            props.setAttributes({\n                                                reverse_cols:val\n                                            }) \n                                        }\n                            }\n                        />\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\n\t\t\t\t</InspectorControls>\n\t\t\t</Fragment>\n\t\t);\n\t};\n}, 'withReverseControl' );\naddFilter( 'editor.BlockEdit', 'Rellax/with-Reverse-control', withReverseControl );\n\nconst ReverseExtraProps = ( saveElementProps, blockType, attributes ) => {\n    if ( activated_reverse(blockType.name) ) { \n\t\tif(attributes.reverse_cols){\n\t\t\tlet reverse = attributes.reverse_cols;\n\t\t\tif(reverse){\n\t\t\t\tObject.assign( saveElementProps, { \n\t\t\t\t\tclassName:  saveElementProps.className + ((reverse)?' reverse-mobile':''),\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n    }\n\treturn saveElementProps;\n};addFilter( 'blocks.getSaveContent.extraProps', 'Reverse/get-save-content/extra-props', ReverseExtraProps );\n\n\n\n"]}