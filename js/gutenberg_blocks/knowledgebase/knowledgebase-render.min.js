function _toConsumableArray(e) {
    return _arrayWithoutHoles(e) || _iterableToArray(e) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray(e) {
    if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
}
function _arrayWithoutHoles(e) {
    if (Array.isArray(e)) {
        for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];
        return n;
    }
}
function _slicedToArray(e, t) {
    return _arrayWithHoles(e) || _iterableToArrayLimit(e, t) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
function _iterableToArrayLimit(e, t) {
    if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) {
        var n = [],
            r = !0,
            a = !1,
            c = void 0;
        try {
            for (var o, l = e[Symbol.iterator](); !(r = (o = l.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0);
        } catch (e) {
            (a = !0), (c = e);
        } finally {
            try {
                r || null == l.return || l.return();
            } finally {
                if (a) throw c;
            }
        }
        return n;
    }
}
function _arrayWithHoles(e) {
    if (Array.isArray(e)) return e;
}
cdm_core.fn.docReady(function () {
    return build_knowledgebase();
});
var build_knowledgebase = function () {
        document.querySelector(".wp-block-exm-knowledgebase") && cdm_core.react.render(React.createElement(Knowledgebase, { docs: knowledgebase_data.docs }), document.querySelector(".wp-block-exm-knowledgebase"));
    },
    Knowledgebase = function (e) {
        var t = cdm_core.react.fragment,
            n = _slicedToArray(cdm_core.react.useState(null), 2),
            r = n[0],
            a = n[1],
            c = _slicedToArray(cdm_core.react.useState([]), 2),
            o = c[0],
            l = c[1],
            i = cdm_core.components.Conditional;
        React.useEffect(function () {
            if ((u(), void 0 !== document.querySelector(".wrap-extra"))) {
                var e = document.createElement("hr");
                (e.className = "p-0 m-0 has-color-2-background-color has-background"), document.querySelector(".wrap-extra").parentNode.insertBefore(e, document.querySelector(".wrap-extra").nextSibling);
            }
        }, []),
            React.useEffect(function () {
                d();
            });
        var u = function () {
                void 0 !== document.querySelector("banner-extra.content .right") &&
                    cdm_core.react.render(
                        React.createElement(
                            "div",
                            { class: "search_box" },
                            React.createElement("h4", null, knowledgebase_data.lang.howhelp),
                            React.createElement(
                                "div",
                                { class: "form-wrapper" },
                                React.createElement("input", { type: "text", name: "s", id: "search", onChange: m, placeholder: knowledgebase_data.lang.search }),
                                React.createElement("button", { onClick: s, class: "search-knowledge" }, React.createElement("i", { class: "fal fa-search" }))
                            )
                        ),
                        document.querySelector(".banner-extra.content .right")
                    );
            },
            d = function () {
                var n = [
                        React.createElement(
                            "a",
                            {
                                href: "#",
                                onClick: function (e) {
                                    e.preventDefault(), g(null);
                                },
                            },
                            knowledgebase_data.lang.ariane_base
                        ),
                    ],
                    a = o.flatMap(function (t) {
                        var n = e.docs.filter(function (e) {
                            return e.ID == t;
                        });
                        if (n.length > 0)
                            return [
                                React.createElement("i", { class: "fal fa-angle-right", "aria-hidden": "true" }),
                                React.createElement(
                                    "a",
                                    {
                                        onClick: function (e) {
                                            e.preventDefault(), g(n[0].ID);
                                        },
                                        href: n[0].ID,
                                    },
                                    cdm_core.fn.HTMLEntities(n[0].name)
                                ),
                            ];
                    }),
                    c = n.concat(a);
                if (r) {
                    var l = e.docs.filter(function (e) {
                        return e.ID == r;
                    });
                    l.length > 0 && (c = c.concat([React.createElement("i", { class: "fal fa-angle-right", "aria-hidden": "true" }), React.createElement("span", null, cdm_core.fn.HTMLEntities(l[0].name))]));
                }
                void 0 !== document.querySelector("div.breadcrumb") && cdm_core.react.render(React.createElement(t, null, c), document.querySelector("div.breadcrumb"));
            };
        window.onpopstate = function (e) {
            o.length > 0 && (e.preventDefault(), b());
        };
        var s = function () {
                y(document.getElementById("search").value);
            },
            m = function (e) {
                y(e.target.value);
            },
            f = function () {
                return null == r
                    ? e.docs.filter(function (e) {
                          return (null == e.parent_category || 0 == e.parent_category) && 1 == e.is_category;
                      })
                    : "string" == typeof r
                    ? e.docs.filter(function (e) {
                          return e.name.toLowerCase().replace(" ", "").includes(r.toLowerCase().replace(" ", ""));
                      })
                    : e.docs.filter(function (e) {
                          return e.parent_category == r;
                      });
            },
            g = function (e) {
                var t = o.indexOf(e);
                l(o.slice(0, t)), a(e);
            },
            y = function (e) {
                document.querySelector(".banner-top").scrollIntoView(!0), l([].concat(_toConsumableArray(o), [r])), a(e);
            },
            b = function () {
                var e = o[o.length - 1];
                l(
                    o.filter(function (t) {
                        return t != e;
                    })
                ),
                    a(e);
            };
        return React.createElement(
            t,
            null,
            React.createElement(i, { condition: o.length > 0 }, React.createElement("button", { onClick: b }, knowledgebase_data.lang.back)),
            React.createElement(i, { condition: "string" == typeof r }, React.createElement("p", { class: "empty" }, " ", r)),
            React.createElement(
                i,
                { condition: f().length > 0 },
                React.createElement(
                    "div",
                    null,
                    f().map(function (e) {
                        return React.createElement(Knowledgebase_cell, { clickFn: y, image: e.image, is_category: e.is_category, file: e.file, title: e.name, id: e.ID, external_link: e.external_link2});
                    })
                )
            ),
            React.createElement(i, { condition: 0 == f().length && "string" != typeof r }, React.createElement("p", { class: "empty" }, " ", knowledgebase_data.lang.empty)),
            React.createElement(i, { condition: 0 == f().length && "string" == typeof r }, React.createElement("p", { class: "empty" }, " ", knowledgebase_data.lang.search_empty))
        );
    },
    Knowledgebase_cell = function (e) {
        var t = cdm_core.components.ImageWP;

        return React.createElement(
            "div",
            {
                onClick: function () {
					if( null == e.external_link || 0 == e.external_link ){
						null == e.file || 0 == e.file ? e.clickFn(e.id) : open(e.file.url);
					}else{
						open(e.external_link)
					}				 
                }
            },
            React.createElement(t, { src: e.image }),
            React.createElement("span", null, cdm_core.fn.HTMLEntities(e.title))
        );
    };
//# sourceMappingURL=../../maps/gutenberg_blocks/knowledgebase/knowledgebase-render.min.js.map
